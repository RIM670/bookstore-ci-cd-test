name: CI/CD for Bookstore App

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    name: 🔧 Build and Test
    runs-on: self-hosted

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '18'

    - name: 📦 Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: 🧪 Build with Maven
      run: |
        cd bookstore
        chmod +x mvnw
        ./mvnw clean install --no-transfer-progress

    - name: 📁 Save JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: bookstore-jar
        path: bookstore/target/*.jar

  security-scan:
    name: 🔒 Trivy Scan
    runs-on: self-hosted
    needs: build-and-test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Build Docker image for scan
      run: docker build -t bookstore-app -f bookstore/Dockerfile .

    - name: 🔎 Run Trivy scan
      run: |
        mkdir -p trivy-reports
        trivy image --format html --output trivy-reports/report.html --severity CRITICAL,HIGH bookstore-app || true

    - name: 📤 Upload Trivy report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-reports/report.html

  dockerize:
    name: 🐳 Build Docker Image
    runs-on: self-hosted
    needs: build-and-test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🧼 Clean previous images
      run: |
        docker stop bookstore-container || true
        docker rm bookstore-container || true
        docker rmi -f bookstore-app || true

    - name: 🐳 Build Docker image
      run: docker build -t bookstore-app -f bookstore/Dockerfile .

  deploy:
    name: 🚀 Deploy
    runs-on: self-hosted
    needs: [dockerize, security-scan]

    steps:
    - name: 🔁 Run new container
      run: docker run -d -p 8080:8080 --name bookstore-container bookstore-app
