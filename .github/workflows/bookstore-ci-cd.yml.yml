name: CI/CD for Bookstore App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '18'

    - name: Build with Maven
      run: |
        cd bookstore
        chmod +x mvnw
        ./mvnw clean install

    - name: Save JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: bookstore-jar
        path: bookstore/target/*.jar

  scan:
    name: Trivy Scan
    runs-on: self-hosted
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download JAR
      uses: actions/download-artifact@v4
      with:
        name: bookstore-jar
        path: target

    - name: Build Docker image for scanning
      run: docker build -t bookstore-app -f bookstore/Dockerfile .

    - name: Run Trivy scan
      run: |
        mkdir -p trivy-reports
        trivy image --format html --output trivy-reports/trivy-report.html --severity CRITICAL,HIGH bookstore-app || true

    - name: Upload Trivy report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-reports/trivy-report.html
  sonar:
     name: SonarQube Scan
     runs-on: self-hosted
     needs: build

     steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run SonarQube Analysis
        run: |
          cd bookstore
          ./mvnw sonar:sonar \
            -Dsonar.projectKey=bookstore-app \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}


  deploy:
    name: Deploy Container
    runs-on: self-hosted
    needs: scan

    steps:
    - name: Download JAR
      uses: actions/download-artifact@v4
      with:
        name: bookstore-jar
        path: target

    - name: Stop and remove old container
      run: |
        docker stop bookstore-container || true
        docker rm bookstore-container || true

    - name: Remove old Docker image
      run: |
        docker rmi -f bookstore-app || true

    - name: Build new Docker image
      run: docker build -t bookstore-app -f bookstore/Dockerfile .

    - name: Run new container
      run: docker run -d -p 8080:8080 --name bookstore-container bookstore-app
